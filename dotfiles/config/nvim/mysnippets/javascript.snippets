snippet // "/* ------"
// -----------------------------------------------------------------------------------------------
// $0
// -----------------------------------------------------------------------------------------------
endsnippet


snippet log "console.log(...)" b
console.log($0);
endsnippet

snippet if "if() { ... ]"
if (${1:true}) {
  $0
}
endsnippet

snippet c "const foo = ...;"
const $1 = $0
endsnippet

snippet ca "const { ... } = ...;"
const { ${1:arg} } = ${2:val};
$0
endsnippet

snippet cb "const fun = () => { ... };"
const ${1:funName} = (${2:args}) => {
  $0
};
endsnippet

snippet "(\S+)\.find" ".find((e)=>{ ... })" r
`!p snip.rv=match.group(1)`.find(${1:e} => $0 );
endsnippet
snippet "(\S+)\.findb" ".find((e)=>{ ... })" r
`!p snip.rv=match.group(1)`.find((${1:e}) => {
	$0
});
endsnippet

snippet fun "function() { ... }"
function ${1:name}() {
  $0
}
endsnippet

snippet "(\S+)\.all" ".every(<item> => [...] );" r
`!p snip.rv=match.group(1)`.every(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`} => $0);
endsnippet

snippet "(\S+)\.any" ".some(<item> => [...] );" r
`!p snip.rv=match.group(1)`.some(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`} => $0);
endsnippet

snippet "(\S+)\.ea" ".forEach(<item> => [...] );" r
`!p snip.rv=match.group(1)`.forEach(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`} => $0);
endsnippet

snippet "(\S+)\.eab" ".forEach((<item>) => { [...] });" r
`!p snip.rv=match.group(1)`.forEach((${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`}) => {
	$0
});
endsnippet

snippet "(\S+)\.ev" ".every(<item> => [...] );" r
`!p snip.rv=match.group(1)`.every(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`} => $0);
endsnippet

snippet "(\S+)\.fil" ".filter(<item> => [...] );" r
`!p snip.rv=match.group(1)`.filter(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`} => $0);
endsnippet

snippet "(\S+)\.filb" ".filter((<item>) => { [...] });" r
`!p snip.rv=match.group(1)`.filter((${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`}) => {
	$0
});
endsnippet

snippet "(\S+)\.map" ".map(<item> => [...] );" r
`!p snip.rv=match.group(1)`.map(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`} => $0);
endsnippet

snippet "(\S+)\.mapb" ".map((<item>) => { [...] });" r
`!p snip.rv=match.group(1)`.map((${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`}) => {
	$0
});
endsnippet

snippet "(\S+)\.mapf" ".map(function map(<item>) { [...] });" r
`!p snip.rv=match.group(1)`.map(function map(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`}) {
	$0
});
endsnippet

snippet "(\S+)\.some" ".some(<item> => [...] );" r
`!p snip.rv=match.group(1)`.some(${1:`!p
element_name = match.group(1).lstrip('$@')
ematch = re.search("([A-Za-z][A-Za-z0-9_]+?)s?[^A-Za-z0-9_]*?$", element_name)
try:
	wmatch = re.search("([A-Za-z][A-Za-z0-9_]+)$", ematch.group(1))
	snip.rv = wmatch.group(1).lower()
except:
	snip.rv = 'element'
`} => $0);
endsnippet
